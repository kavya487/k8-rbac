apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: dev
  name: default-trainee
rules:
  - apiGroups: ["*"]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-trainee
  namespace: dev
subjects:
- kind: User
  name: suresh
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: default-trainee
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: default-trainee
rules:
- apiGroups: [""]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["nodes","persistentvolumes"]
  verbs: ["get", "watch", "list"]

---


apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: default-trainee
subjects:
- kind: User
  name: suresh # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: default-trainee
  apiGroup: rbac.authorization.k8s.io